"""create users table

Revision ID: c86e9995f734
Revises: 
Create Date: 2025-09-10 19:57:25.026728

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c86e9995f734'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('birthdate', sa.DateTime(), nullable=False),
    sa.Column('biological_sex', sa.String(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('ancestry', sa.String(), nullable=False),
    sa.Column('medical_record', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("ancestry IN ('White', 'Black', 'Latin','Asian','Multiracial')", name='ancestry_sex_field_check'),
    sa.CheckConstraint("biological_sex IN ('Male', 'Female')", name='biological_sex_field_check'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patients')
    # ### end Alembic commands ###
